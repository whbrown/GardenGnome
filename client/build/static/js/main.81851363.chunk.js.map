{"version":3,"sources":["components/Homepage.js","services/auth.js","components/Signup.js","components/Login.js","components/Navbar.js","components/reuse/theme.js","components/reuse/PageHeading.js","components/reuse/H3.js","components/reuse/H4.js","components/reuse/CardHeading.js","components/reuse/PlantCard.js","components/UserPlants.js","components/reuse/UserCard.js","components/reuse/BackButton.js","components/UserGarden.js","components/reuse/ProfileCard.js","components/reuse/CardSubheading.js","components/reuse/CardText.js","components/Gnomes.js","components/PlantList.js","components/SearchBar.js","components/PlantSearch.js","components/reuse/DetailsContainer.js","components/reuse/PlantDetail.js","components/Carousel.js","components/reuse/WaterNeedsStyled.js","components/WaterNeeds.js","components/CharacteristicTopic.js","components/SunNeeds.js","components/SoilNeeds.js","components/PlantCharacteristics.js","convertCamelCaseToNormal.js","components/PlantColour.js","components/PlantDetails.js","components/UserComments.js","components/UserWishlist.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","state","username","password","error","console","log","this","props","user","className","style","textAlign","src","alt","width","to","type","Component","signup","imageUrl","axios","post","then","response","data","catch","err","login","handleUpload","theFile","Signup","uploadOn","handleFileUpload","e","target","files","uploadData","FormData","append","setState","secure_url","handleChange","event","name","value","handleSubmit","preventDefault","message","setUser","history","push","onSubmit","htmlFor","id","onChange","variant","Login","_id","for","Nav","styled","nav","P","p","color","Img","img","height","Navbar","onClick","delete","theme","primary","secondary","offwhite","grey","contrast","black","PageHeading","h2","margin","H3","h3","H4","h4","CardHeading","h5","PlantCard","div","UserPlants","handleClick","renderMyGarden","get","match","params","setTargetUser","targetUser","garden","map","plant","plantId","key","plantImageURL","plantCommonName","UserCard","BackButton","UserGarden","goBack","followUser","patch","yourUpdatedData","followedUserData","prevProps","marginBottom","padding","followers","length","following","display","justifyContent","children","ProfileCard","CardSubheading","CardText","Gnomes","gnomes","PlantList","filteredPlants","slice","index","commonName","plantCommonNames","encodedLatinName","encodeURI","plantLatinName","offsetVertical","SearchBar","searching","searchAPIDebounced","AwesomeDebouncePromise","getPlants","a","setQuery","searchQuery","setFilteredPlants","class","icon","faSearch","aria-describedby","placeholder","role","PlantSearch","encodeURIComponent","DetailsContainer","PlantDetail","white","Carousel","currentImage","images","imageRotationTimer","showNextImage","classList","remove","add","showPreviousImage","handleKeyPress","window","keyCode","document","querySelector","setInterval","clearInterval","onKeyPress","image","WaterNeeds","quantifiedWaterNeeds","frequencyMessage","formattedMoistureType","formattedWaterRequirements","formatWaterRequirements","requirementLevel","quantifyWaterNeeds","requirements","Array","from","Set","reduce","requirementSum","formatMoistureMsg","moistureTypes","moisture","toLowerCase","join","waterRequirements","genus","res","WaterNeedsStyled","faTint","CharacteristicTopic","sunNeed","sunPairIcon","property","SunNeeds","sunRequirement","faSun","faCloudSun","faCloud","dgSunNeeds","rhsSunNeeds","pairIcon","sunNeeds","aspect","exposure","SoilNeeds","rhsSoilNeeds","soilTypes","soilType","phTypes","phType","PlantCharacteristics","dgPlantCharacteristics","rhsPlantCharacteristics","plantClass","category","characteristics","habit","danger","plantDanger","toxicity","hardiness","fragrance","convertCamelCaseToNormal","string","convertedString","split","letter","test","toUpperCase","PlantColour","formatRHSColours","season","rhsColours","colour","dgColours","Object","values","keys","colourProp","prop","PlantDetails","latinName","selectedPlantInfo","rhsInfo","dgInfo","setSelectedPlantInfo","concat","additionalPhotos","photo","replace","taxonomicInfo","plantGenus","soil","sunExposure","sunlight","bloomColour","bloomColor","foliageColour","foliageColor","bloomTime","bloomShape","bloomSize","JSON","stringify","UserComments","renderComments","UserWishlist","renderWishlist","App","plants","sanitizedInput","exact","path","render","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81851363.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nclass Homepage extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.user)\r\n    return (\r\n      <div className=\"homepage\" style={{ textAlign: \"center\" }}>\r\n        <img src=\"../../assets/gnome.svg\" alt=\"Garden Gnome\" style={{ width: \"30vw\" }} />\r\n        <h2>Gnome</h2>\r\n        <p>Your pocket guide to growing healthy and happy plants. Access our database of over 300,000 plants and their in-depth information on care and maintenance</p>\r\n        <p>Use our social platform to donate, adopt, buy or sell plants with local growers or find nearby farmers markets to share your produce!</p>\r\n        {!this.props.user && // only show if logged out\r\n          <div>\r\n            <Link to=\"/signup\"><button type=\"button\" className=\"btn btn-primary\">Signup</button></Link>\r\n            <Link to=\"/login\"><button type=\"button\" className=\"btn btn-success\">Login</button></Link>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n","import axios from \"axios\";\r\n\r\nconst signup = (username, password, imageUrl) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password,\r\n      imageUrl: imageUrl\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport axios from 'axios'\r\n\r\nlet handleUpload = (theFile) => {\r\n  // console.log('file in service: ', theFile)\r\n  return axios.post('/api/upload', theFile)\r\n    .then(response => response.data)\r\n    .catch(err => err.response.data);\r\n}\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    imageUrl: \"https://www.amcorro.com/wp-content/uploads/2013/05/user-icon-1.png\",\r\n    uploadOn: false,\r\n    error: \"\"\r\n  };\r\n\r\n  // this method handles just the file upload\r\n  handleFileUpload = e => {\r\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\r\n\r\n    const uploadData = new FormData();\r\n    // imageUrl => this name has to be the same as in the model since we pass\r\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\r\n    uploadData.append(\"imageUrl\", e.target.files[0]);\r\n\r\n    this.setState({ uploadOn: true });\r\n    handleUpload(uploadData)\r\n      .then(response => {\r\n        // console.log('response is: ', response);\r\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n        this.setState({ imageUrl: response.secure_url, uploadOn: false });\r\n        console.log(response)\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error while uploading the file: \", err);\r\n      });\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    signup(this.state.username, this.state.password, this.state.imageUrl).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/mygarden/myplants\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Signup</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            name=\"imageUrl\"\r\n            onChange={(e) => this.handleFileUpload(e)} />\r\n\r\n          {this.state.error && (\r\n            <p variant=\"danger\">{this.state.error}</p>\r\n          )}\r\n          <button type=\"submit\">Sign up</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\nimport { login } from \"../services/auth\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    login(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to gardens page with plants\n        this.props.history.push(`/user/${data._id}/plants`);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"username\"\n              name=\"username\"\n              className=\"form-control\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" id=\"geolocationCheck\" />\n            <label className=\"form-check-label\" for=\"geolocationCheck\">Use my current location</label>\n          </div>\n          {this.state.error && (\n            <p variant=\"danger\">{this.state.error}</p>\n          )}\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../services/auth\";\r\nimport styled, { css } from 'styled-components'\r\n\r\n/* ---------------------------------------------------------- STYLED COMPONENTS --------------------------------------------------------- */\r\n\r\nconst Nav = styled.nav`\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: white;\r\n  height: 60px;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  box-shadow: 0 -1px 5px rgba(0,0,0,.1);\r\n`\r\nconst P = styled.p`\r\n  /* color: ${props => props.color}; */\r\n  color: rgb(37, 37, 37);\r\n`\r\n\r\nconst Img = styled.img`\r\n  height: ${props => props.height};\r\n`\r\n\r\n/* ---------------------------------------------------------- NAVBAR RENDERING ---------------------------------------------------------- */\r\n\r\nconst Navbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    props.history.push(`/user/${props.user._id}/plants`)\r\n  }\r\n\r\n  return (\r\n    <Nav className=\"navbar-nav fixed-bottom container-fluid\">\r\n      {props.user ? (\r\n        <>\r\n          <Link className=\"nav-item nav-link\" to={`/user/${props.user._id}/plants`} onClick={handleClick}>\r\n            <Img src=\"../../assets/leaf.svg\" alt=\"my garden\" height=\"30px\" />\r\n            <P>Garden</P >\r\n          </Link>\r\n          <Link className=\"nav-item nav-link\" to=\"/gnomes\">\r\n            <Img src=\"../../assets/map.svg\" alt=\"local gnomes\" height=\"30px\" />\r\n            <P>Gnomes</P >\r\n          </Link>\r\n          <Link className=\"nav-item nav-link\" to=\"/plants/search\">\r\n            <Img src=\"../../assets/search.svg\" alt=\"search plants\" height=\"30px\" />\r\n            <P>Search</P >\r\n          </Link>\r\n          <Link className=\"nav-item nav-link\" to=\"/\">\r\n            <Img src=\"../../assets/star.svg\" alt=\"discover\" height=\"30px\" />\r\n            <P>Discover</P >\r\n          </Link>\r\n          <Link className=\"nav-item nav-link\" to=\"/\" onClick={handleLogout}>\r\n            <Img src=\"../../assets/logout.svg\" alt=\"\" height=\"30px\" />\r\n            <P>Logout</P >\r\n          </Link>\r\n        </>\r\n      ) : (\r\n          <>\r\n            <Link className=\"nav-item nav-link\" to=\"/\">\r\n              <Img src=\"../../assets/star.svg\" alt=\"discover\" height=\"30px\" />\r\n              <P>Discover</P >\r\n            </Link>\r\n            <Link className=\"nav-item nav-link\" to=\"/\">\r\n              <Img src=\"../../assets/search.svg\" alt=\"search plants\" height=\"30px\" />\r\n              <P>Search</P >\r\n            </Link>\r\n          </>\r\n        )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const theme = {\n  primary: '#185C2A',\n  secondary: '#81A77B',\n  offwhite: '#F3EEEE',\n  grey: '#B9B8C3',\n  contrast: '#A83236',\n  black: '#051409'\n};\nexport default theme;","import styled, {ThemeProvider} from 'styled-components';\r\nimport theme from './theme';\r\n\r\nconst PageHeading = styled.h2`\r\n  font-weight: 800;\r\n  color: ${(props) => props.theme.black};\r\n  margin: ${props => props.margin};\r\n  text-align: ${props => props.textAlign};\r\n`;\r\n\r\nexport default PageHeading;","import styled from 'styled-components'\r\n\r\nconst H3 = styled.h3`\r\n  margin: 0 0.5rem;\r\n  font-size: 1.1rem;\r\n  font-weight: 400;\r\n  color: rgb(37, 54, 41);\r\n  text-align: ${props => props.textAlign};\r\n`\r\n\r\nexport default H3","import styled from 'styled-components'\r\n\r\nconst H4 = styled.h4`\r\n  margin: 0 0.5rem;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: rgb(37, 54, 41);\r\n  text-align: ${props => props.textAlign};\r\n`\r\n\r\nexport default H4","import styled, {ThemeProvider} from 'styled-components';\r\nimport theme from './theme';\r\n\r\nconst CardHeading = styled.h5`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.black};\r\n  margin: 5px 10px;\r\n  text-align: ${props => props.textAlign};\r\n`\r\n\r\nexport default CardHeading","import styled, { css } from 'styled-components'\r\n\r\nconst PlantCard = styled.div`\r\n  background: white;\r\n  border-radius: 10px;\r\n  margin: 1em 0;\r\n  padding: 0.5rem;\r\n  box-shadow: 0 0px 10px rgba(0,0,0,.1);\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  max-width: 100vw;\r\n`\r\n\r\nexport default PlantCard","import React, { Component } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport PageHeading from './reuse/PageHeading'\r\nimport H3 from './reuse/H3'\r\nimport H4 from './reuse/H4'\r\nimport CardHeading from './reuse/CardHeading'\r\nimport PlantCard from './reuse/PlantCard'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Img = styled.img`\r\n  width: 120px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  border-radius: 6px;\r\n`\r\n\r\nclass UserPlants extends Component {\r\n\r\n  handleClick = () => {\r\n    axios\r\n      .post(\"/api/plants/mygarden\")\r\n      .then(response => {\r\n        this.props.setUser(response.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  renderMyGarden = () => {\r\n    axios\r\n      .get(`/api/user/${this.props.match.params.id}/plants`)\r\n      .then(response => {\r\n        this.props.setTargetUser(response.data)\r\n      })\r\n  }\r\n\r\n  // Do a componentDidMount where you do a GET request for the user\r\n  componentDidMount() {\r\n    this.renderMyGarden();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.targetUser.garden && this.props.targetUser.garden.map(plant => {\r\n          // Avoids the initial render error where user's plantId is NULL and throws an error\r\n          return (plant.plantId && (\r\n            <PlantCard key={plant._id}>\r\n              <Img src={plant.plantId.plantImageURL} alt=\"\" />\r\n              <div>\r\n                <CardHeading> {plant.name}</CardHeading>\r\n                <h4>{plant.plantId.plantCommonName}</h4>\r\n              </div>\r\n            </PlantCard>)\r\n          )\r\n        })}\r\n        {/* Placeholder button which  */}\r\n        <button onClick={this.handleClick}>Add plant to my garden</button>\r\n        {/* \"For each\" loop through all the users plants here to display CARDS? of each plant*/}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserPlants;","import styled, { css } from 'styled-components'\r\n\r\nconst UserCard = styled.div`\r\n  background: white;\r\n  border-radius: 10px;\r\n  margin: 1rem 0;\r\n  padding: 0.5rem;\r\n  box-shadow: 0 0px 10px rgba(0,0,0,.1);\r\n  display: flex;\r\n`\r\n\r\nexport default UserCard","import styled from 'styled-components'\r\n\r\nconst BackButton = styled.img`\r\n  width: 40px;\r\n  align-self: flex-start;\r\n  margin-left: 1em;\r\n  margin-top: 1em;\r\n`\r\n\r\nexport default BackButton","import React, { Component } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport UserPlants from './UserPlants'\r\nimport PageHeading from './reuse/PageHeading'\r\nimport H3 from './reuse/H3'\r\nimport H4 from './reuse/H4'\r\nimport H5 from './reuse/CardHeading'\r\nimport UserCard from './reuse/UserCard'\r\nimport BackButton from './reuse/BackButton'\r\n\r\n\r\nclass UserGarden extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  followUser = () => {\r\n    axios\r\n      .patch(`/api/user/${this.props.match.params.id}/following`)\r\n      .then((yourUpdatedData) => { console.log(\"TargetUser added to your 'following' array: \", yourUpdatedData) })\r\n      .then(() => {\r\n        axios.patch(`/api/user/${this.props.match.params.id}/follow`)\r\n          .then((followedUserData) => { console.log(\"Added yourself to TargetUser's 'followers' array: \", followedUserData) })\r\n      })\r\n  }\r\n\r\n  renderMyGarden = () => {\r\n    axios\r\n      .get(`/api/user/${this.props.match.params.id}/plants`)\r\n      // .get(`/api/targetUser/${this.props.targetUser._id}/plants`)\r\n      .then(response => {\r\n        this.props.setTargetUser(response.data)\r\n      })\r\n  }\r\n\r\n  // // Do a componentDidMount where you do a GET request for all the garden plants\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id\r\n      // || prevProps.targetUser.followers !== this.props.targetUser.followers\r\n    ) {\r\n      this.renderMyGarden()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    console.log(\"CURRENT PROP\", this.props.targetUser)\r\n    return (\r\n      <div style={{ marginBottom: \"80px\", padding: \"1rem\" }}>\r\n        <BackButton src=\"../../assets/back-arrow.svg\" alt=\"back-arrow\" onClick={this.handleClick} />\r\n        <PageHeading textAlign=\"left\" margin=\"(65px 0 0 0)\">Garden</PageHeading>\r\n        <UserCard>\r\n          <img src={this.props.targetUser.imageUrl} alt=\"\" style={{ height: \"80px\" }} />\r\n          <div>\r\n            <H3>User:</H3>\r\n            <H4 textAlign=\"left\">{this.props.targetUser.username}</H4>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <H3>Followers ({this.props.targetUser.followers && this.props.targetUser.followers.length})</H3>\r\n              <H3>Following ({this.props.targetUser.following && this.props.targetUser.following.length})</H3>\r\n            </div>\r\n            {/* Conditional rendering of button - prevent you from following yourself */}\r\n            {this.props.match.params.id !== this.props.user._id &&\r\n              // both follows user AND re-renders the garden\r\n              < button onClick={() => { this.followUser(); this.renderMyGarden() }}>Follow</button>\r\n            }\r\n          </div>\r\n        </UserCard>\r\n        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <Link to={`/user/${this.props.targetUser._id}/plants`}>\r\n            <H4>Plants</H4>\r\n          </Link>\r\n          <Link to={`/user/${this.props.targetUser._id}/comments`}>\r\n            <H4>Comments</H4>\r\n          </Link>\r\n          <Link to={`/user/${this.props.targetUser._id}/wishlist`}>\r\n            <H4>Wishlist</H4>\r\n          </Link>\r\n        </div>\r\n        {this.props.children}\r\n      </div >)\r\n  }\r\n}\r\n\r\nexport default UserGarden;","import styled from 'styled-components'\r\n\r\nconst ProfileCard = styled.div`\r\n  margin: 1rem 0;\r\n  padding: 1rem;\r\n  display: flex;\r\n  /* border: solid 1px black; */\r\n`\r\n\r\nexport default ProfileCard","import styled from 'styled-components'\r\n\r\nconst CardSubheading = styled.p`\r\n  margin: 0 0.5rem;\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  color: rgb(110, 110, 110);\r\n  text-align: ${props => props.textAlign};\r\n`\r\n\r\nexport default CardSubheading","import styled from 'styled-components';\r\n\r\nconst CardText = styled.p`\r\n  margin: 0 0.5rem;\r\n  font-size: 0.8rem;\r\n  font-weight: 400;\r\n  color: ${(props) => props.theme.black};\r\n  text-align: ${props => props.textAlign};\r\n`\r\n\r\nexport default CardText","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\n/* ---------------------------------------------------------- STYLED COMPONENTS --------------------------------------------------------- */\r\nimport PageHeading from './reuse/PageHeading'\r\nimport ProfileCard from './reuse/ProfileCard'\r\nimport CardHeading from './reuse/CardHeading'\r\nimport CardSubheading from './reuse/CardSubheading'\r\nimport CardText from './reuse/CardText'\r\nimport BackButton from './reuse/BackButton'\r\n\r\nconst Img = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n  object-fit: cover;\r\n  /* Makes the profile image a circle */\r\n  border-radius: 50%;\r\n`\r\n\r\nclass Gnomes extends Component {\r\n  state = {\r\n    gnomes: []\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('/api/plants/gnomes')\r\n      .then(response => {\r\n        console.log(\"LIST OF ALL USERS?: \", response)\r\n        this.setState({\r\n          gnomes: response.data\r\n        })\r\n      })\r\n      .then(() => {\r\n        console.log(\"THIS.STATE.GNOMES: \", this.state.gnomes)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"80px\", padding: \"1rem\" }}>\r\n        {/* PLACEHOLDER ---- back arrow to be a navigation function */}\r\n        <BackButton src=\"../../assets/back-arrow.svg\" alt=\"back-arrow\" onClick={this.handleClick} />\r\n        <PageHeading textAlign=\"left\" margin=\"(65px 0 0 0)\">Local Gnomes</PageHeading>\r\n        {this.state.gnomes.map(user => {\r\n          console.log(\"USER INFORMATION FOR EACH CARD: \", user)\r\n          return (\r\n            <Link to={`/user/${user._id}/plants`}>\r\n              <ProfileCard>\r\n                <Img src={user.imageUrl} alt=\"profile picture\" />\r\n                <div>\r\n                  {/* ALL THIS is placeholder items which should be replaced with a MAP function of all the profiles in the user's KM vicinity */}\r\n                  {/* Perhaps add a simple garden icon which changes depending on how many plants the user has in their garden */}\r\n                  <CardHeading>{user.username}</CardHeading>\r\n                  <CardText>Garden Size: ({user.garden.length})</CardText>\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <CardSubheading>Seeking:</CardSubheading>\r\n                    <CardText>Rose</CardText>\r\n                  </div>\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <CardSubheading>Offering:</CardSubheading>\r\n                    <CardText>-</CardText>\r\n                  </div>\r\n                </div>\r\n              </ProfileCard>\r\n            </Link>\r\n          )\r\n        })}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Gnomes;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PlantCard from '../components/reuse/PlantCard';\r\nimport LazyLoad from 'react-lazy-load';\r\n\r\n\r\nclass PlantList extends Component {\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('filtered plants:',  this.props.plants);\r\n  //   console.log('update')\r\n  // }\r\n\r\n\r\n  render() {\r\n    // console.log(this.props.plants.length)\r\n    // console.log('plantList props', this.props)\r\n    return (\r\n      <div>\r\n        {this.props.filteredPlants ? this.props.filteredPlants.slice(0, 200).map((plant, index) => {\r\n          const commonName = plant.plantCommonNames.length > 1 ? plant.plantCommonNames[1] : plant.plantCommonNames[0];\r\n          const encodedLatinName = encodeURI(plant.plantLatinName);\r\n          // console.log(encodedLatinName);\r\n          return (\r\n            <Link to={`/plants/id=${plant._id}&latinName=${encodedLatinName}`} key={plant._id}>\r\n              <PlantCard>\r\n                <h3>\r\n                  {`${index}.`} {plant.plantLatinName}\r\n                </h3>\r\n                <h4>{commonName}</h4>\r\n                <LazyLoad offsetVertical={300}>\r\n                  <img src={plant.plantImageURL} />\r\n                </LazyLoad>\r\n                {/* <p>{plant.plantImageURL}</p> */}\r\n              </PlantCard>\r\n            </Link>)\r\n        }) : 'Nothing found.'\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default PlantList","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searching: false,\r\n  }\r\n  // debounces the axios requests to plant database, resolving only the last promise stored up to 500ms after last input, whereupon the GET request is then made\r\n  searchAPIDebounced = AwesomeDebouncePromise(this.props.getPlants, 500);\r\n\r\n  handleChange = async event => {\r\n    // Changes parent's state property - \"searchQuery\"\r\n    await this.props.setQuery(event.target.value);\r\n    // Parent's axios request based on searchQuery\r\n    if (this.props.searchQuery) {\r\n      await this.setState({\r\n        searching: true\r\n      })\r\n      const response = await this.searchAPIDebounced(this.props.searchQuery);\r\n      await this.props.setFilteredPlants(response.data);\r\n      await this.setState({\r\n        searching: false\r\n      })\r\n    }\r\n  }\r\n\r\n  // handleSubmit = event => {\r\n  //   event.preventDefault();\r\n  //   axios.get('/api/plants', {\r\n\r\n  //   })\r\n  // }\r\n\r\n\r\n  // method = debounce(() => {\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    return (\r\n      <div className=\"d-flex flex-column align-items-center col-4\">\r\n        {/* <label htmlFor=\"\">Search by name: </label> */}\r\n        <div class=\"input-group mb-3\">\r\n          <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\" id=\"basic-addon3\"><FontAwesomeIcon icon={faSearch}/></span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            class=\"form-control\"\r\n            aria-describedby=\"basic-addon3\"\r\n            id=\"query\"\r\n            onChange={this.handleChange}\r\n            value={this.props.searchQuery}\r\n            placeholder={\"Start typing to search by name...\"} />\r\n        </div>\r\n        {this.state.searching && \r\n        <div className=\"spinner-border text-success\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  // });\r\n}\r\n\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PlantList from \"./PlantList\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport BackButton from './reuse/BackButton';\r\n\r\nclass PlantSearch extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  getPlants = (searchQuery) => {\r\n    console.log('send axios database query', searchQuery);\r\n    // return fetch(\"/api/plants/\" + encodeURIComponent(searchQuery))\r\n    return axios.get(\"/api/plants/search/\" + encodeURIComponent(searchQuery));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPlants();\r\n  }\r\n\r\n  render() {\r\n    // console.log('plantSearch props', this.props);\r\n    return (\r\n      <div className=\"plants-container container\">\r\n        <BackButton src=\"../../assets/back-arrow.svg\" alt=\"back-arrow\" onClick={this.handleClick} />\r\n        <h2>Find a plant</h2>\r\n        <SearchBar getPlants={this.getPlants} setQuery={this.props.setQuery} searchQuery={this.props.searchQuery} setFilteredPlants={this.props.setFilteredPlants} className=\"row\"/>\r\n        <PlantList filteredPlants={this.props.filteredPlants} className=\"row\" />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlantSearch;\r\n","import styled, {ThemeProvider} from 'styled-components';\nimport theme from './theme';\n\nconst DetailsContainer = styled.div`\n  background: ${(props) => props.theme.offwhite};\n  color: ${(props) => props.theme.primary};\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  /* justify-content: center; */\n  margin: 0 auto;\n  min-height: 100vh;\n  max-width: 100%;\n  overflow-wrap: break-word;\n`;\nexport default DetailsContainer;","import styled, {ThemeProvider} from 'styled-components';\nimport theme from './theme';\n\nconst PlantDetail = styled.div`\n  background: ${(props) => props.theme.white};\n  border-radius: 10px;\n  margin: 1em 0;\n  padding: 0.5rem;\n  box-shadow: 0 0px 10px rgba(0,0,0,.1);\n  display: flex;\n  flex-wrap: wrap;\n  width: 90%;\n  max-width: 90%;\n`\n\nexport default PlantDetail","import React, { Component } from \"react\";\nimport '../stylesheets/carousel.css';\n// import '../index.css';\nclass Carousel extends Component {\n  state = {\n    currentImage: 0,\n    images: null,\n    imageRotationTimer: null,\n  }\n\n  componentDidMount() {\n    const [...images] = document.querySelector('.slider').children;\n    if (this.props.images.length > 1) {\n      this.imageRotationTimer = setInterval(this.showNextImage, 8000);\n      this.setState({\n        images: images,\n        imageRotationTimer: this.imageRotationTimer,\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.imageRotationTimer);\n  }\n\n  showNextImage = () => {\n    this.state.images[this.state.currentImage].classList.remove('active');\n  \n    if(this.state.currentImage < this.state.images.length - 1) {\n      this.state.currentImage += 1;\n    } else {\n      this.state.currentImage = 0;\n    }\n  \n    this.state.images[this.state.currentImage].classList.add('active');\n    // console.log(this.state.currentImage);\n  }\n\n  showPreviousImage = () => {\n    this.state.images[this.state.currentImage].classList.remove('active');\n  \n    if(this.state.currentImage > 0) {\n      this.state.currentImage -= 1;\n    } else {\n      this.state.currentImage = this.state.images.length - 1;\n    }\n  \n    this.state.images[this.state.currentImage].classList.add('active');\n    console.log('carousel current Image:', this.state.currentImage);\n  }\n\n  handleKeyPress = (e) => {\n    e = e || window.event;\n    \n    if (e.keyCode == '37') {\n      this.showPreviousImage();\n    } else if (e.keyCode == '39') {\n      this.showNextImage();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"carousel-container\" onKeyPress={this.handleKeyPress}>\n      {this.props.images.length > 1 &&\n        <button className=\"arrow previous carousel-btn\" onClick={this.showPreviousImage}>\n                <span>\n                  <i className=\"ion-arrow-left-c\">←</i>\n                </span>\n                </button>\n                }\n        <section className=\"slider\">\n        {this.props.images.map((image, index) => {\n            if (index === 0) {\n              return <img src={image} className=\"active carousel-img\" key={index} />\n            }\n            return <img src={image} key={index} className=\"carousel-img\" />\n          })}\n        </section>\n        {this.props.images.length > 1 &&\n            <button className=\"next arrow carousel-btn\" onClick={this.showNextImage}>\n              <span>\n                <i className=\"ion-arrow-right-c\">→</i>\n              </span> \n            </button>\n                }\n      </div>\n    )\n  }\n}\n\nexport default Carousel;","import styled, {ThemeProvider} from 'styled-components';\nimport theme from './theme';\n\nconst WaterNeeds = styled.div`\n  background: ${props => props.theme.white};\n  & .topicTitle {\n    font-weight: 600;\n  }\n  & .waterFrequency {\n    color: #3B9CE1;\n    margin: 0 0.1em;\n    background: rgba(216,235,249, 0.3);\n    -webkit-box-shadow: 0px 0px 10px 1px rgba(216,235,249, ${props => (props.quantifiedWaterNeeds / 10) + 0.2});\n    -moz-box-shadow: 0px 0px 10px 1px rgba(216,235,249, ${props => (props.quantifiedWaterNeeds / 10) + 0.2});\n    box-shadow: 0px 0px 10px 1px rgba(216,235,249, ${props => (props.quantifiedWaterNeeds / 10) + 0.2});\n  }\n  & .soilMoisture {\n    color: #472C02;\n    margin: 0 0.1em;\n    background: rgba(149, 93, 9, 0.2);\n    -webkit-box-shadow: 0px 0px 10px 2px rgba(149, 93, 9, 0.3);\n    -moz-box-shadow: 0px 0px 10px 2px rgba(149, 93, 9, 0.3);\n    box-shadow: 0px 0px 10px 2px rgba(149, 93, 9, 0.3);\n  }\n`;\n\nexport default WaterNeeds;","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport WaterNeedsStyled from './reuse/WaterNeedsStyled';\nimport H4 from './reuse/H4';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTint } from '@fortawesome/free-solid-svg-icons';\n\nclass WaterNeeds extends Component {\n  state = {\n    quantifiedWaterNeeds: 0,\n    frequencyMessage: '',\n    formattedMoistureType: '',\n    formattedWaterRequirements: '',\n  }\n\n  formatWaterRequirements = (requirementLevel) => {\n    switch(requirementLevel) {\n      case \"Drought-tolerant; suitable for xeriscaping\":\n         return `Very drought-tolerant. Can survive without reliable watering.`;\n      case \"Average Water Needs;  Water regularly; do not overwater\": \n         return `It has average water needs. Water regularly, but make sure not to overwater\"`;\n      case \"Requires consistently moist soil; do not let dry out between waterings\":\n        return `It requires consistently moist soil. Don't let it dry out between waterings!`\n      case \"Very high moisture needs; suitable for bogs and water gardens\":\n        return `It has very high moisture needs, most suitable for bogs and water gardens.`;\n      default:\n        return requirementLevel;\n    }\n  }\n\n  quantifyWaterNeeds = (requirements) => {\n    return Array.from(new Set(requirements)).reduce((requirementSum, requirementLevel) => {\n      switch(requirementLevel) {\n        case \"Drought-tolerant; suitable for xeriscaping\":\n           return requirementSum + 1;\n        case \"Average Water Needs;  Water regularly; do not overwater\": \n           return requirementSum + 4;\n        case \"Requires consistently moist soil; do not let dry out between waterings\":\n          return requirementSum + 7;\n        case \"Very high moisture needs; suitable for bogs and water gardens\":\n          return requirementSum + 10;\n        default:\n          return requirementSum;\n      }\n    }, 0) / requirements.length;\n  }\n\n  formatMoistureMsg = moistureTypes => {\n    moistureTypes = moistureTypes.map((moisture) => moisture.toLowerCase())\n    switch (moistureTypes.length) {\n      case 0:\n        return null;\n      case 1:\n        return `${moistureTypes[0]}`;\n      case 2:\n        return `between ${moistureTypes[0]} & ${moistureTypes[1]}`;\n      default:\n        return `between ${moistureTypes.slice(0, moistureTypes.length - 1).join(', ')} & ${\n          moistureTypes[moistureTypes.length - 1]\n        }`;\n      }\n  }\n\n  frequencyMessage = (quantifiedWaterNeeds) => {\n    // const { quantifiedWaterNeeds } = this.state;\n    if (quantifiedWaterNeeds < 2) return 'once a fortnight';\n    if (quantifiedWaterNeeds < 4) return 'every 10 days';\n    if (quantifiedWaterNeeds < 6) return 'once a week';\n    if (quantifiedWaterNeeds > 6) return 'every few days';\n  }\n\n\n  async componentDidMount() {\n\n    if (!this.props.waterRequirements.length) {\n      console.log('axios get request:', `/search/genus=${this.props.genus}&waterRequirements=true`);\n      axios.get(`/api/plants/search/genus=${this.props.genus}&waterRequirements=true`)\n      .then((res) => {\n        console.log('res.data', res.data);\n        this.setState({\n          \n        })\n        return [res.data.waterRequirements[0], this.quantifyWaterNeeds(res.data.waterRequirements)];\n      })\n      .then(([waterRequirements, quantifiedWaterNeeds]) => {\n        console.log('quantifiedWaterNeeds', quantifiedWaterNeeds)\n        this.setState({\n          formattedWaterRequirements: this.formatWaterRequirements(waterRequirements),\n          formattedMoistureType: this.formatMoistureMsg(this.props.moistureTypes),\n          quantifiedWaterNeeds: quantifiedWaterNeeds,\n          frequencyMessage: this.frequencyMessage(quantifiedWaterNeeds)\n        });\n      })\n        \n    } else {\n      const quantifiedWaterNeeds = this.quantifyWaterNeeds(this.props.waterRequirements)\n      this.setState({\n        formattedWaterRequirements: this.formatWaterRequirements(this.props.waterRequirements[0]),\n        formattedMoistureType: this.formatMoistureMsg(this.props.moistureTypes),\n        frequencyMessage: this.frequencyMessage(quantifiedWaterNeeds)\n      })\n    }\n    // parseNeeds(this.props.waterRequirements);\n  }\n  render() {\n    console.log('water needs state:', this.props);\n    return (\n      <WaterNeedsStyled quantifiedWaterNeeds={this.state.quantifiedWaterNeeds}>\n         <H4 className='topicTitle'><FontAwesomeIcon icon={faTint}/> Water</H4>\n  <p>This plant should be watered <span className='waterFrequency'>{this.state.frequencyMessage}</span>{this.state.formattedMoistureType ? <span>, and the soil kept <span className='soilMoisture'>{this.state.formattedMoistureType}</span></span> : ''}</p>.\n  {this.props.waterRequirements.length ? <p>{this.state.formattedWaterRequirements}</p> : ''}\n      </WaterNeedsStyled>\n    )\n  }\n}\nexport default WaterNeeds;","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudSun, faCloud } from '@fortawesome/free-solid-svg-icons';\nimport '../stylesheets/plantNeeds.css';\n\n\nclass CharacteristicTopic extends Component {\n\n\n  render() {\n    if (this.props.sunNeed) {\n      const { sunNeed } = this.props;\n      return (\n        <li className=\"rounded-edges list-group-item d-flex justify-content-center align-items-center my-1 px-5\">\n          <span className=\"plant-characteristic\">{sunNeed}</span>\n          {this.props.sunPairIcon({sunNeed})}\n        </li>\n      )\n    } else {\n      const { property } = this.props;\n      return (\n        <li className=\"rounded-edges list-group-item d-flex justify-content-center align-items-center my-1 px-5\">\n          <span className=\"plant-characteristic\">{property}</span>\n        </li>\n      )\n    }\n  }\n}\n\nexport default CharacteristicTopic;","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudSun, faCloud } from '@fortawesome/free-solid-svg-icons';\nimport '../stylesheets/plantNeeds.css';\nimport CharacteristicTopic from '../components/CharacteristicTopic';\n\n\nclass SunNeeds extends Component {\n\n  pairIcon(sunRequirement) {\n    switch (sunRequirement) {\n      case (\"Full Sun\" || \"Sun to Partial Shade\"):\n        return <FontAwesomeIcon icon={faSun}/>;\n      case (\"Partial Shade\" || \"Light Shade\" || \"Partial to Full Shade\"):\n        return <FontAwesomeIcon icon={faCloudSun}/>;\n      case (\"Full Shade\"):\n        return <FontAwesomeIcon icon={faCloud}/>;\n      default:\n        return <FontAwesomeIcon icon={faSun}/>;\n    }\n  }\n\n  render() {\n    console.log('sunNeeds props:', this.props)\n    const { dgSunNeeds, rhsSunNeeds } = this.props;\n\n    return (\n      <div className=\"card rounded-edges card-shadow align-self-start mx-4\">\n        <div className=\"card-header d-flex justify-content-center\">\n          <p className=\"card-header-title my-0 text-center font-weight-bold\">\n            Sunlight Requirements\n          </p>\n        </div>\n      <div className=\"card-body d-flex flex-column align-items-center\">\n        <h5 className=\"my-0\">Sun Needs</h5>\n        <ul className=\"list-group\">\n          {dgSunNeeds.length ? dgSunNeeds.map((sunNeed, index) => {\n            return (\n              <CharacteristicTopic index={index} sunNeed={sunNeed} sunPairIcon={this.pairIcon} />\n              // <li key={index} className=\"rounded-edges list-group-item d-flex justify-content-center align-items-center my-1 px-5\">\n              //   <span className=\"sunExposureReq\">{sunNeed}\n              //   </span>\n              //   {this.pairIcon({sunNeed})}\n              // </li>\n            )\n          }) : rhsSunNeeds.sunNeeds.map((sunNeed, index) => {\n            return (\n              <CharacteristicTopic index={index} sunNeed={sunNeed} sunPairIcon={this.pairIcon} />\n            )\n          })}\n          {rhsSunNeeds.aspect &&\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <h5 className=\"my-3\">Aspect</h5>\n            <ul className=\"list-group\">\n              {rhsSunNeeds.aspect.map((aspect, index) => (\n                  <CharacteristicTopic index={index} property={aspect} />\n                ))}\n            </ul>\n          </div>\n          }\n          {rhsSunNeeds.exposure && \n          <div className=\"rounded-edges d-flex flex-column justify-content-center align-items-center\">\n            <h5 className=\"my-3\">Exposure</h5>\n            <ul className=\"list-group rounded-edges\">\n              {rhsSunNeeds.exposure.map((exposure, index) => (\n                  <CharacteristicTopic key={index} property={exposure} />\n                ))}\n            </ul>\n          </div>\n          }\n          \n        </ul>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default SunNeeds;","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../stylesheets/plantNeeds.css';\nclass SoilNeeds extends Component {\n\n\n\n  render() {\n    console.log('sunNeeds props:', this.props)\n    const { rhsSoilNeeds } = this.props;\n    return (\n      <div className=\"card card-shadow rounded-edges\">\n        <div className=\"card-header rounded-edges d-flex justify-content-center align-items-center\">\n          <p className=\"card-header-title rounded-edges text-center font-weight-bold\">\n            Soil Requirements\n          </p>\n        </div>\n      <div className=\"rounded-edges card-body d-flex flex-column align-items-center rounded-edges\">\n      <h5 className=\"my-3\">Soil Type{rhsSoilNeeds.soilTypes.length > 1 && <>s</>}</h5>\n        <ul className=\"rounded-edges list-group\">\n          {rhsSoilNeeds.soilTypes.map((soilType, index) => {\n            return (\n              <li key={index} className=\"rounded-edges list-group-item d-flex justify-content-center align-items-center my-1 px-5\">\n                <span className=\"soilNeedReq\">{soilType}\n                </span>\n              </li>\n            )\n          })}\n          {rhsSoilNeeds.moistureTypes &&\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <h5 className=\"my-3\">Moisture</h5>\n            <ul className=\"list-group\">\n              {rhsSoilNeeds.moistureTypes.map((moisture, index) => (\n                  <li key={index} className=\"rounded-edges list-group-item d-flex justify-content-between align-items-center text-center my-1 px-5\">\n                    <span className=\"soilNeedReq\">{moisture}</span>\n                  </li>))}\n            </ul>\n          </div>\n          }\n          {rhsSoilNeeds.exposure && \n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <h5 className=\"my-3\">Exposure</h5>\n            <ul className=\"list-group\">\n              {rhsSoilNeeds.exposure.map((exposure, index) => (\n                <li key={index} className=\"rounded-edges list-group-item d-flex justify-content-between align-items-center text-center my-1 px-5\">\n                  <span className=\"soilNeedReq\">{exposure}</span>\n                </li>))}\n            </ul>\n          </div>\n          }\n          {rhsSoilNeeds.phTypes && \n            <div className=\"d-flex flex-column justify-content-center align-items-center\">\n              <h5 className=\"my-3\">pH Level{rhsSoilNeeds.phTypes.length > 1 && <>s</>}</h5>\n              <ul className=\"list-group\">\n                {rhsSoilNeeds.phTypes.map((phType, index) => (\n                  <li key={index} className=\"rounded-edges list-group-item d-flex justify-content-between align-items-center text-center my-1 px-5\">\n                    <span className=\"soilNeedReq\">{phType}</span>\n                  </li>))}\n              </ul>\n            </div>\n          }\n        </ul>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default SoilNeeds;","import React, { Component } from \"react\";\nimport '../stylesheets/plantNeeds.css';\nimport CharacteristicTopic from '../components/CharacteristicTopic';\nimport RHSPlantProperty from '../components/RHSPlantProperty';\n\n\nexport default class PlantCharacteristics extends Component {\n\n  render() {\n    console.log('plantCharacteristics props:', this.props)\n    const { dgPlantCharacteristics, rhsPlantCharacteristics } = this.props;\n\n    return (\n      <div className=\"card rounded-edges card-shadow align-self-start mx-4\">\n        <div className=\"card-header d-flex justify-content-center\">\n          <p className=\"card-header-title my-0 text-center font-weight-bold\">\n            Plant Characteristics\n          </p>\n        </div>\n      <div className=\"card-body d-flex flex-column align-items-center\">\n        {dgPlantCharacteristics.class.length ?\n        <div id=\"class\">\n          <h5 className=\"my-0\">Class</h5>\n          <ul className=\"list-group\">\n            {dgPlantCharacteristics.class.map((plantClass, index) => {\n              return <CharacteristicTopic key={index} property={plantClass} />\n            })}\n          </ul>\n        </div> : <></>\n        }\n        {/* {dgPlantCharacteristics.category.length ?\n        <div id='category'>\n          <h5 className=\"my-0\">Class</h5>\n          <ul className=\"list-group\">\n            {dgPlantCharacteristics.class.map((plantClass, index) => {\n              return <CharacteristicTopic key={index} property={plantClass} />\n            })}\n          </ul>\n        </div> : <></>\n        } */}\n        {dgPlantCharacteristics.category.length ?\n        <div id='category'>\n          <h5 className=\"my-0\">Category</h5>\n          <ul className=\"list-group\">\n            {dgPlantCharacteristics.category.map((plantClass, index) => {\n              return <CharacteristicTopic key={index} property={plantClass} />\n            })}\n          </ul>\n        </div> : <></>\n        }\n        {rhsPlantCharacteristics.characteristics.habit ?\n        // <RHSPlantProperty property={rhsPlantCharacteristics.habit} />\n        <div id='habit'>\n          <h5 className=\"my-0\">Habit</h5>\n          <ul className=\"list-group\">\n            <CharacteristicTopic property={rhsPlantCharacteristics.characteristics.habit} />\n          </ul>\n        </div> \n        : <></>\n        }\n        {dgPlantCharacteristics.danger.length ?\n        <div id='danger'>\n          <h5 className=\"my-0\">Danger</h5>\n          <ul className=\"list-group\">\n            {dgPlantCharacteristics.danger.map((plantDanger, index) => {\n              return <CharacteristicTopic key={index} property={plantDanger} />\n            })}\n          </ul>\n        </div> : <></>}\n        {rhsPlantCharacteristics.characteristics.toxicity ?\n        // <RHSPlantProperty property={rhsPlantCharacteristics.toxicity} />\n        <div id='toxicity'>\n          <h5 className=\"my-0\">Toxicity</h5>\n          <ul className=\"list-group\">\n            <CharacteristicTopic property={rhsPlantCharacteristics.characteristics.toxicity} />\n          </ul>\n        </div> \n        : <></>}\n        {\n          rhsPlantCharacteristics.characteristics.hardiness ?\n          // <RHSPlantProperty property={rhsPlantCharacteristics.characteristics.hardiness} title='Hardiness' />\n          <div id='hardiness'>\n            <h5 className=\"my-0\">Hardiness</h5>\n            <ul className=\"list-group\">\n              <CharacteristicTopic property={rhsPlantCharacteristics.characteristics.hardiness} />\n            </ul>\n          </div> \n        : <></>\n        }\n        {\n          rhsPlantCharacteristics.characteristics.fragrance ?\n          // <RHSPlantProperty property={rhsPlantCharacteristics.characteristics.fragrance} title='Fragrance' />\n          <div id='fragrance'>\n            <h5 className=\"my-0\">Fragrance</h5>\n            <ul className=\"list-group\">\n              <CharacteristicTopic property={rhsPlantCharacteristics.characteristics.fragrance} />\n            </ul>\n          </div> \n        : <></>\n        }\n      </div>\n    </div>\n    )\n  }\n}\n\n// export default plantCharacteristics;","const convertCamelCaseToNormal = string => {\n  const convertedString = string.split('').reduce((convertedString, letter) => {\n    if (/[A-Z]/.test(letter)) {\n      return `${convertedString} ${letter.toLowerCase()}`;\n    }\n    return `${convertedString}${letter}`;\n  });\n  return convertedString.slice(0, 1).toUpperCase() + convertedString.slice(1);\n};\n\nexport default convertCamelCaseToNormal;","import React, { Component } from \"react\";\nimport '../stylesheets/plantNeeds.css';\nimport CharacteristicTopic from '../components/CharacteristicTopic';\nimport RHSPlantProperty from '../components/RHSPlantProperty';\nimport convertCamelCaseToNormal from '../convertCamelCaseToNormal';\n\n\nexport default class PlantColour extends Component {\n  \n  formatRHSColours = (season) => {\n    console.log(season);\n    const { rhsColours } = this.props;\n    return ['Foliage', 'Fruit', 'Flower'].map((type, index) => {\n      if (rhsColours[season][type.toLowerCase()].length) {\n        console.log(type);\n      return <><h6>{type}</h6><ul>{rhsColours[season][type.toLowerCase()].map((colour) => <li>{colour}</li>)}</ul></>\n      } else {\n        return <></>\n      }\n    })\n    \n  }\n\n\n  render() {\n    console.log('plantCharacteristics props:', this.props)\n    const { dgColours, rhsColours } = this.props;\n    // console.log('rhsColours', rhsColours);\n\n    return (\n    <div className=\"card rounded-edges card-shadow align-self-start mx-4\">\n      <div className=\"card-header d-flex justify-content-center\">\n        <p className=\"card-header-title my-0 text-center font-weight-bold\">\n          Colour\n        </p>\n      </div>\n      <div className=\"card-body d-flex flex-column align-items-center\">\n        {Object.values(dgColours).length ? \n        <div>\n          <ul>\n            {Object.keys(dgColours).map((colourProp, index) => {\n              if (dgColours[colourProp].length) {\n                return (<div id={convertCamelCaseToNormal(colourProp)}>\n              <h5 className=\"my-0\">{convertCamelCaseToNormal(colourProp)}</h5>\n                <ul className=\"list-group\">\n                  {dgColours[colourProp].map((prop, index) => {\n                    return <CharacteristicTopic key={index} property={prop} />\n                  })}\n                </ul>\n              </div>)\n              } else {\n                return <></>\n              }\n            })}\n          </ul>\n        </div>        \n        : <></>\n      }\n        <div>\n          <h4>By Season</h4>\n      {Object.keys(rhsColours).map((season) => <ul><h4>{season}</h4>{this.formatRHSColours(season)}</ul>)}\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\n// export default plantCharacteristics;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport PageHeading from '../components/reuse/PageHeading';\nimport H3 from '../components/reuse/H3';\nimport H4 from '../components/reuse/H4';\nimport PlantCard from '../components/reuse/PlantCard';\nimport BackButton from '../components/reuse/BackButton';\nimport DetailsContainer from '../components/reuse/DetailsContainer';\nimport PlantDetail from '../components/reuse/PlantDetail';\nimport Carousel from '../components/Carousel';\nimport WaterNeeds from '../components/WaterNeeds';\nimport SunNeeds from '../components/SunNeeds';\nimport SoilNeeds from '../components/SoilNeeds';\nimport PlantCharacteristics from '../components/PlantCharacteristics';\nimport PlantColour from '../components/PlantColour';\n\nexport default class PlantDetails extends Component {\n\n  handleClick = () => {\n    this.props.history.goBack();\n  }\n\n  async componentDidMount() {\n    // change to use props.match instead of state\n    console.log('PlantDetails.props.match.params', this.props.match.params)\n    const { id, latinName } = this.props.match.params;\n    await axios.get(`../api/plants/search/id=${id}&latinName=${latinName}`).then((res) => {\n      const selectedPlantInfo = {\n        rhsInfo: res.data.rhsInfo,\n        dgInfo: res.data.dgInfo\n      }\n      return this.props.setSelectedPlantInfo(selectedPlantInfo);\n    });\n    // if (this.props.selectedPlant._id) {\n    //   const selectedPlant = await axios.get(\"/api/plants/details/\" + encodeURIComponent(this.props.selectedPlant._id))\n    // }\n  }\n\n  render() {\n    console.log(this.props)\n    // console.log('this.state:', this.state);\n    const { dgInfo, rhsInfo } = this.props.selectedPlantInfo;\n\n    return (\n      <DetailsContainer>\n          <BackButton src='../../assets/back-arrow.svg' alt=\"back-arrow\" onClick={this.handleClick} />\n          <PageHeading>{dgInfo.plantLatinName}</PageHeading>\n          {dgInfo.plantLatinName ?\n          <PlantCard>\n              <Carousel images={[dgInfo.plantImageURL].concat(dgInfo.additionalPhotos.map((photo) => photo.replace(/_tn\\.jpg/, '.jpg')))} />\n              \n              <WaterNeeds waterRequirements={dgInfo.waterRequirements} genus={dgInfo.taxonomicInfo.plantGenus.match(/\\w+/)[0]} moistureTypes={rhsInfo.soil.moistureTypes}/>\n              <SunNeeds dgSunNeeds={dgInfo.sunExposure} rhsSunNeeds={rhsInfo.sunlight}/>\n              <SoilNeeds rhsSoilNeeds={rhsInfo.soil} />\n              <PlantCharacteristics dgPlantCharacteristics={dgInfo} rhsPlantCharacteristics={rhsInfo} />\n              <PlantColour rhsColours={rhsInfo.colour} dgColours={{bloomColour: dgInfo.bloomColor, foliageColour: dgInfo.foliageColor, bloomTime: dgInfo.bloomTime, bloomShape: dgInfo.bloomShape, bloomSize: dgInfo.bloomSize }} />\n              <PlantDetail>\n\n                {JSON.stringify(rhsInfo)}\n              </PlantDetail>\n              <PlantDetail>\n                {JSON.stringify(dgInfo)}\n              </PlantDetail>\n          </PlantCard> : <H4>Loading ...</H4>}\n      </DetailsContainer>\n    )\n  }\n}\n","import React, { Component } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport PageHeading from './reuse/PageHeading'\r\nimport H3 from './reuse/H3'\r\nimport H4 from './reuse/H4'\r\nimport CardHeading from './reuse/CardHeading'\r\nimport PlantCard from './reuse/PlantCard'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Img = styled.img`\r\n  width: 120px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  border-radius: 6px;\r\n`\r\n\r\nclass UserComments extends Component {\r\n\r\n  handleClick = () => {\r\n    axios\r\n      .post(\"/api/plants/mygarden\")\r\n      .then(response => {\r\n        this.props.setUser(response.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  renderComments = () => {\r\n    axios\r\n      .get(`/api/user/${this.props.match.params.id}/comments`)\r\n      .then(response => {\r\n        this.props.setTargetUser(response.data)\r\n      })\r\n  }\r\n\r\n  // Do a componentDidMount where you do a GET request for the user\r\n  componentDidMount() {\r\n    this.renderComments();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.targetUser.garden && this.props.targetUser.garden.map(plant => {\r\n          // Avoids the initial render error where user's plantId is NULL and throws an error\r\n          return <H3>Comment 1</H3>\r\n        })}\r\n        {/* Placeholder button which  */}\r\n        <button onClick={this.handleClick}>Add plant to my garden</button>\r\n        {/* \"For each\" loop through all the users plants here to display CARDS? of each plant*/}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserComments;","import React, { Component } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport PageHeading from './reuse/PageHeading'\r\nimport H3 from './reuse/H3'\r\nimport H4 from './reuse/H4'\r\nimport CardHeading from './reuse/CardHeading'\r\nimport PlantCard from './reuse/PlantCard'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Img = styled.img`\r\n  width: 120px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  border-radius: 6px;\r\n`\r\n\r\nclass UserWishlist extends Component {\r\n\r\n  handleClick = () => {\r\n    axios\r\n      .post(\"/api/plants/mygarden\")\r\n      .then(response => {\r\n        this.props.setUser(response.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  renderWishlist = () => {\r\n    axios\r\n      .get(`/api/user/${this.props.match.params.id}/comments`)\r\n      .then(response => {\r\n        this.props.setTargetUser(response.data)\r\n      })\r\n  }\r\n\r\n  // Do a componentDidMount where you do a GET request for the user\r\n  componentDidMount() {\r\n    this.renderWishlist();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.targetUser.garden && this.props.targetUser.garden.map(plant => {\r\n          // Avoids the initial render error where user's plantId is NULL and throws an error\r\n          return (plant.plantId && (\r\n            <PlantCard key={plant._id}>\r\n              <Img src={plant.plantId.plantImageURL} alt=\"\" />\r\n              <div>\r\n                <CardHeading> {plant.name}</CardHeading>\r\n                <h4>{plant.plantId.plantCommonName}</h4>\r\n              </div>\r\n            </PlantCard>)\r\n          )\r\n        })}\r\n        {/* Placeholder button which  */}\r\n        <button onClick={this.handleClick}>Add plant to my garden</button>\r\n        {/* \"For each\" loop through all the users plants here to display CARDS? of each plant*/}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserWishlist;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport axios from \"axios\";\nimport './App.css';\n\n// REACT COMPONENTS:\nimport Homepage from \"./components/Homepage\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport UserGarden from \"./components/UserGarden\";\nimport Gnomes from \"./components/Gnomes\";\nimport PlantSearch from \"./components/PlantSearch\";\nimport PlantDetails from \"./components/PlantDetails\"\nimport { ThemeProvider } from 'styled-components';\nimport theme from './components/reuse/theme';\nimport UserPlants from \"./components/UserPlants\"\nimport UserComments from \"./components/UserComments\"\nimport UserWishlist from \"./components/UserWishlist\"\n\n// MAKING PUBLIC FOLDER STATIC?\n// const express = require(\"express\");\n// const path = require(\"path\");\n// const app = express();\n// app.use(express.static(path.join(__dirname, \"public\")));\n\nclass App extends Component {\n  state = {\n    user: this.props.user,\n    targetUser: {},\n    filteredPlants: [],\n    searchQuery: ``,\n    selectedPlantInfo: {\n      rhsInfo: {},\n      dgInfo: {}\n    }\n  }\n\n  setFilteredPlants = (plants) => {\n    return this.setState({\n      filteredPlants: plants\n    })\n  }\n\n  setQuery = (searchQuery) => {\n    const sanitizedInput = searchQuery.replace(/[<>.,/;:+_*&^%$#@!`~{}[\\]|\\\\]/g, '');\n    this.setState({\n      searchQuery: sanitizedInput\n    }, () => console.log(this.state.searchQuery))\n  }\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  }\n\n  setSelectedPlantInfo = (selectedPlantInfo) => {\n    return this.setState({\n      selectedPlantInfo: selectedPlantInfo,\n    });\n  }\n\n  setTargetUser = user => {\n    this.setState({\n      targetUser: user\n    })\n  }\n\n  render() {\n    console.log('appjs state', this.state);\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" render={props => <Homepage {...props} user={this.state.user} setUser={this.setUser} />} />\n            <Route exact path=\"/login\"\n              render={props => <Login {...props} setUser={this.setUser} />} />\n            <Route exact path=\"/signup\"\n              render={props => <Signup {...props} setUser={this.setUser} />} />\n            <Route exact path=\"/user/:id/plants\"\n              // OPTION FOR SEXIER CODE: Set a state property where you trigger to render a choice of the 3 children of UserGarden\n              render={props => (\n                <UserGarden {...props} targetUser={this.state.targetUser} setTargetUser={this.setTargetUser} user={this.state.user}>\n                  <UserPlants {...props} targetUser={this.state.targetUser} setTargetUser={this.setTargetUser} />\n                </UserGarden>\n              )} />\n            <Route exact path=\"/user/:id/comments\"\n              render={props => (\n                <UserGarden {...props} targetUser={this.state.targetUser} setTargetUser={this.setTargetUser} >\n                  <UserComments {...props} targetUser={this.state.targetUser} setTargetUser={this.setTargetUser} />\n                </UserGarden>\n              )} />\n            <Route exact path=\"/user/:id/wishlist\"\n              render={props => (\n                <UserGarden {...props} targetUser={this.state.targetUser} setTargetUser={this.setTargetUser} >\n                  <UserWishlist {...props} targetUser={this.state.targetUser} setTargetUser={this.setTargetUser} />\n                </UserGarden>\n              )} />\n            <Route path=\"/gnomes\"\n              render={props => <Gnomes {...props} user={this.state.user} setUser={this.setUser} />} />\n            <Route exact path=\"/plants/search\"\n              render={props => <PlantSearch {...props} setQuery={this.setQuery} searchQuery={this.state.searchQuery} setFilteredPlants={this.setFilteredPlants} filteredPlants={this.state.filteredPlants} />} />\n            <Route exact path=\"/plants/id=:id&latinName=:latinName\" render={props => <PlantDetails {...props} selectedPlantInfo={this.state.selectedPlantInfo} setSelectedPlantInfo={this.setSelectedPlantInfo} />} />\n          </Switch>\n          {/* NavBar Below */}\n          <Route path=\"/\"\n            render={props => <Navbar {...props} user={this.state.user} setUser={this.setUser} />} />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      {/* <App /> */}\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}